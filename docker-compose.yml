services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: pguser
      POSTGRES_PASSWORD: qwerty12345
      POSTGRES_DB: ModuleBankDb
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./Sql/Procedures:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
  
  api:
    build:
      context: .
      dockerfile: Api/Dockerfile
    ports:
      - "80:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    volumes:
      - ./data:/app/data
    depends_on:
      - postgres
      - authapi

  authapi:
    build:
      context: .
      dockerfile: AuthApi/Dockerfile
    ports:
      - "5210:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
  
  hangfire:
    build:
      context: .
      dockerfile: HangfireJobs/Dockerfile
    ports:
      - "5183:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    depends_on:
      - postgres

  rabbitmq:
    image: rabbitmq:management
    hostname: rabbitmq
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 30s
      retries: 3

  # Единственное решение, которое я нашел для добавления rabbitmq_definitions в RabbitMQ
  rabbitmq-init:
    image: curlimages/curl:latest
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./rabbitmq_definitions.json:/definitions.json
    command: >
      sh -c "
        sleep 10 &&
        curl -u admin:admin -X POST -H 'Content-Type: application/json' -d @/definitions.json http://rabbitmq:15672/api/definitions"

volumes:
  postgres_data:
  rabbitmq_data:    